from collections import defaultdict
import heapq

from osgeo import gdal 

from PIL import Image
import numpy as np

import matplotlib.pyplot as plt

import pickle

import pybullet as p
import pybullet_data
import time

path = [(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (1, 7), (1, 8), (2, 8), (2, 9), (3, 9), (3, 10), (4, 10), (4, 9), (4, 8), (3, 8), (3, 7), (2, 7), (2, 6), (2, 5), (1, 5), (1, 4), (2, 4), (2, 3), (3, 3), (3, 2), (3, 1), (4, 1), (4, 2), (5, 2), (5, 1), (6, 1), (7, 1), (8, 1), (8, 0), (9, 0), (9, 1), (9, 2), (9, 3), (10, 3), (10, 2), (11, 2), (12, 2), (13, 2), (13, 1), (14, 1), (14, 2), (14, 3), (14, 4), (14, 5), (14, 6), (14, 7), (15, 7), (15, 8), (16, 8), (17, 8), (18, 8), (19, 8), (19, 9), (20, 9), (21, 9), (21, 10), (21, 11), (21, 12), (21, 13), (21, 14), (21, 15), (22, 15), (23, 15), (23, 16), (24, 16), (24, 15), (25, 15), (26, 15), (26, 16), (27, 16), (28, 16), (29, 16), (29, 17), (29, 18), (30, 18), (31, 18), (32, 18), (32, 19), (33, 19), (33, 20), (33, 21), (32, 21), (32, 22), (32, 23), (33, 23), (33, 24), (33, 25), (34, 25), (34, 26), (34, 27), (34, 28), (34, 29), (34, 30), (35, 30), (36, 30), (36, 31), (36, 32), (35, 32), (35, 33), (34, 33), (33, 33), (33, 34), (32, 34), (32, 33), (32, 32), (31, 32), (30, 32), (30, 31), (29, 31), (28, 31), (28, 32), (28, 33), (28, 34), (28, 35), (28, 36), (29, 36), (30, 36), (30, 37), (31, 37), (32, 37), (32, 38), (33, 38), (33, 39), (34, 39), (35, 39), (36, 39), (37, 39), (38, 39), (39, 39), (40, 39), (41, 39), (41, 40), (41, 41), (41, 42), (41, 43), (41, 44), (40, 44), (40, 45), (41, 45), (41, 46), (40, 46), (40, 47), (39, 47), (38, 47), (38, 48), (38, 49), (37, 49), (36, 49), (36, 50), (36, 51), (35, 51), (34, 51), (34, 52), (33, 52), (33, 53), (32, 53), (32, 54), (32, 55), (33, 55), (33, 56), (33, 57), (34, 57), (34, 58), (34, 59), (33, 59), (32, 59), (32, 60), (31, 60), (31, 61), (31, 62), (30, 62), (29, 62), (29, 63), (30, 63), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (34, 65), (34, 66), (35, 66), (35, 67), (36, 67), (37, 67), (38, 67), (38, 68), (38, 69), (39, 69), (39, 68), (40, 68), (41, 68), (41, 69), (41, 70), (41, 71), (42, 71), (42, 72), (42, 73), (41, 73), (41, 74), (41, 75), (41, 76), (41, 77), (41, 78), (41, 79), (40, 79), (39, 79), (39, 80), (39, 81), (40, 81), (40, 82), (40, 83), (39, 83), (38, 83), (38, 84), (39, 84), (40, 84), (41, 84), (41, 85), (41, 86), (41, 87), (41, 88), (40, 88), (39, 88), (38, 88), (38, 89), (38, 90), (38, 91), (38, 92), (39, 92), (39, 93), (40, 93), (40, 94), (40, 95), (39, 95), (38, 95), (37, 95), (36, 95), (36, 96), (35, 96), (34, 96), (34, 97), (34, 98), (34, 99), (34, 100), (34, 101), (34, 102), (35, 102), (36, 102), (37, 102), (37, 103), (38, 103), (39, 103), (40, 103), (41, 103), (42, 103), (43, 103), (44, 103), (44, 104), (44, 105), (45, 105), (45, 104), (46, 104), (46, 105), (46, 106), (47, 106), (48, 106), (49, 106), (49, 107), (49, 108), (50, 108), (50, 109), (50, 110), (50, 111), (49, 111), (48, 111), (47, 111), (47, 110), (46, 110), (45, 110), (44, 110), (43, 110), (42, 110), (42, 109), (41, 109), (40, 109), (40, 110), (40, 111), (40, 112), (39, 112), (39, 113), (39, 114), (39, 115), (39, 116), (39, 117), (38, 117), (37, 117), (36, 117), (35, 117), (34, 117), (33, 117), (33, 118), (33, 119), (34, 119), (34, 120), (34, 121), (34, 122), (34, 123), (33, 123), (33, 124), (34, 124), (34, 125), (34, 126), (34, 127), (33, 127), (33, 128), (33, 129), (34, 129), (34, 130), (35, 130), (36, 130), (37, 130), (37, 131), (38, 131), (38, 132), (38, 133), (38, 134), (38, 135), (39, 135), (39, 136), (38, 136), (38, 137), (37, 137), (36, 137), (35, 137), (34, 137), (33, 137), (32, 137), (32, 138), (32, 139), (32, 140), (32, 141), (31, 141), (30, 141), (29, 141), (28, 141), (28, 140), (27, 140), (26, 140), (26, 139), (25, 139), (25, 140), (24, 140), (24, 141), (24, 142), (24, 143), (25, 143), (25, 144), (26, 144), (26, 145), (26, 146), (26, 147), (26, 148), (25, 148), (24, 148), (23, 148), (22, 148), (21, 148), (20, 148), (19, 148), (19, 149), (19, 150), (19, 151), (18, 151), (17, 151), (16, 151), (15, 151), (14, 151), (13, 151), (13, 152), (13, 153), (13, 154), (12, 154), (12, 155), (13, 155), (14, 155), (14, 156), (13, 156), (13, 157), (12, 157), (12, 158), (11, 158), (11, 159), (11, 160), (12, 160), (12, 161), (13, 161), (13, 162), (13, 163), (14, 163), (15, 163), (15, 164), (16, 164), (17, 164), (18, 164), (19, 164), (19, 165), (19, 166), (19, 167), (19, 168), (19, 169), (20, 169), (21, 169), (21, 170), (22, 170), (22, 171), (22, 172), (22, 173), (22, 174), (21, 174), (20, 174), (20, 175), (20, 176), (20, 177), (21, 177), (21, 178), (22, 178), (22, 179), (22, 180), (22, 181), (23, 181), (23, 182), (24, 182), (24, 183), (25, 183), (26, 183), (27, 183), (27, 184), (27, 185), (27, 186), (28, 186), (28, 187), (28, 188), (27, 188), (26, 188), (25, 188), (24, 188), (23, 188), (22, 188), (21, 188), (21, 189), (21, 190), (21, 191), (21, 192), (21, 193), (20, 193), (20, 194), (19, 194), (19, 195), (19, 196), (19, 197), (19, 198), (18, 198), (17, 198), (17, 199), (16, 199), (15, 199), (14, 199), (14, 200), (14, 201), (14, 202), (13, 202), (13, 203), (13, 204), (12, 204), (12, 205), (12, 206), (12, 207), (12, 208), (12, 209), (11, 209), (10, 209), (9, 209), (9, 210), (8, 210), (8, 211), (7, 211), (6, 211), (5, 211), (5, 212), (5, 213), (5, 214), (5, 215), (6, 215), (6, 216), (7, 216), (8, 216), (9, 216), (9, 215), (10, 215), (11, 215), (11, 216), (12, 216), (12, 215), (13, 215), (14, 215), (14, 216), (15, 216), (15, 217), (15, 218), (15, 219), (15, 220), (15, 221), (15, 222), (14, 222), (14, 223), (14, 224), (14, 225), (15, 225), (15, 226), (14, 226), (13, 226), (13, 227), (13, 228), (13, 229), (12, 229), (11, 229), (10, 229), (10, 228), (9, 228), (9, 227), (9, 226), (9, 225), (8, 225), (8, 226), (7, 226), (7, 227), (6, 227), (6, 226), (5, 226), (4, 226), (4, 227), (4, 228), (4, 229), (5, 229), (5, 230), (5, 231), (4, 231), (4, 232), (3, 232), (2, 232), (1, 232), (1, 233), (1, 234), (2, 234), (2, 235), (2, 236), (2, 237), (2, 238), (2, 239), (2, 240), (1, 240), (1, 241), (1, 242), (1, 243), (1, 244), (1, 245), (1, 246), (1, 247), (1, 248), (1, 249), (2, 249), (2, 250), (3, 250), (4, 250), (5, 250), (5, 251), (5, 252), (6, 252), (7, 252), (8, 252), (8, 253), (8, 254), (8, 255), (8, 256), (8, 257), (8, 258), (8, 259), (8, 260), (8, 261), (9, 261), (9, 262), (9, 263), (9, 264), (9, 265), (9, 266), (10, 266), (11, 266), (12, 266), (12, 267), (13, 267), (13, 268), (14, 268), (14, 269), (14, 270), (14, 271), (13, 271), (13, 272), (12, 272), (12, 273), (11, 273), (10, 273), (9, 273), (9, 274), (9, 275), (8, 275), (8, 276), (7, 276), (7, 277), (6, 277), (6, 278), (7, 278), (7, 279), (8, 279), (8, 280), (7, 280), (7, 281), (6, 281), (6, 282), (6, 283), (6, 284), (6, 285), (6, 286), (5, 286), (4, 286), (3, 286), (3, 287), (2, 287), (2, 288), (2, 289), (2, 290), (2, 291), (2, 292), (2, 293), (2, 294), (2, 295), (2, 296), (1, 296), (1, 297), (1, 298), (1, 299), (1, 300), (2, 300), (2, 301), (1, 301), (1, 302), (1, 303), (1, 304), (1, 305), (1, 306), (1, 307), (2, 307), (2, 308), (1, 308), (1, 309), (1, 310), (2, 310), (2, 311), (2, 312), (1, 312), (1, 313), (1, 314), (1, 315), (1, 316), (1, 317), (1, 318), (1, 319), (1, 320), (2, 320), (2, 321), (2, 322), (2, 323), (2, 324), (2, 325), (2, 326), (2, 327), (2, 328), (2, 329), (2, 330), (1, 330), (1, 331), (1, 332), (1, 333), (2, 333), (2, 334), (3, 334), (4, 334), (4, 335), (3, 335), (3, 336), (3, 337), (3, 338), (4, 338), (5, 338), (6, 338), (6, 339), (6, 340), (7, 340), (7, 341), (7, 342), (7, 343), (7, 344), (7, 345), (7, 346), (7, 347), (6, 347), (6, 348), (6, 349), (6, 350), (6, 351), (6, 352), (5, 352), (5, 353), (5, 354), (6, 354), (7, 354), (7, 355), (8, 355), (9, 355), (10, 355), (10, 356), (11, 356), (12, 356), (13, 356), (13, 357), (14, 357), (15, 357), (15, 358), (16, 358), (16, 359), (16, 360), (16, 361), (17, 361), (18, 361), (19, 361), (20, 361), (21, 361), (22, 361), (23, 361), (23, 362), (24, 362), (24, 363), (25, 363), (26, 363), (27, 363), (27, 362), (28, 362), (28, 363), (29, 363), (30, 363), (31, 363), (31, 362), (32, 362), (33, 362), (33, 363), (33, 364), (34, 364), (34, 365), (33, 365), (33, 366), (33, 367), (33, 368), (33, 369), (33, 370), (33, 371), (34, 371), (35, 371), (36, 371), (36, 372), (37, 372), (38, 372), (38, 373), (39, 373), (39, 374), (39, 375), (39, 376), (39, 377), (39, 378), (39, 379), (39, 380), (39, 381), (38, 381), (38, 382), (37, 382), (37, 383), (36, 383), (35, 383), (35, 384), (34, 384), (33, 384), (33, 385), (32, 385), (31, 385), (30, 385), (30, 386), (29, 386), (28, 386), (28, 387), (27, 387), (26, 387), (26, 386), (25, 386), (25, 387), (24, 387), (24, 388), (23, 388), (23, 389), (23, 390), (22, 390), (21, 390), (20, 390), (19, 390), (18, 390), (17, 390), (17, 391), (17, 392), (16, 392), (15, 392), (15, 393), (14, 393), (14, 394), (14, 395), (15, 395), (15, 396), (15, 397), (14, 397), (13, 397), (13, 398), (12, 398), (11, 398), (11, 399), (11, 400), (12, 400), (13, 400), (14, 400), (15, 400), (16, 400), (17, 400), (18, 400), (18, 401), (19, 401), (20, 401), (20, 402), (20, 403), (20, 404), (20, 405), (20, 406), (21, 406), (22, 406), (23, 406), (23, 407), (24, 407), (25, 407), (26, 407), (26, 408), (27, 408), (27, 409), (27, 410), (28, 410), (29, 410), (30, 410), (30, 411), (30, 412), (30, 413), (30, 414), (31, 414), (31, 415), (32, 415), (32, 416), (32, 417), (32, 418), (33, 418), (34, 418), (34, 419), (34, 420), (34, 421), (34, 422), (34, 423), (34, 424), (33, 424), (33, 425), (33, 426), (34, 426), (34, 427), (35, 427), (35, 428), (36, 428), (36, 429), (35, 429), (35, 430), (35, 431), (34, 431), (34, 432), (34, 433), (34, 434), (34, 435), (34, 436), (35, 436), (35, 437), (35, 438), (35, 439), (36, 439), (36, 440), (37, 440), (37, 439), (38, 439), (38, 438), (39, 438), (40, 438), (41, 438), (42, 438), (43, 438), (44, 438), (44, 439), (45, 439), (46, 439), (47, 439), (48, 439), (49, 439), (50, 439), (50, 440), (51, 440), (52, 440), (52, 441), (52, 442), (53, 442), (54, 442), (54, 443), (54, 444), (55, 444), (55, 445), (56, 445), (57, 445), (57, 446), (58, 446), (59, 446), (60, 446), (61, 446), (62, 446), (63, 446), (63, 445), (64, 445), (65, 445), (66, 445), (66, 446), (66, 447), (66, 448), (66, 449), (65, 449), (65, 450), (65, 451), (66, 451), (66, 452), (67, 452), (67, 453), (68, 453), (69, 453), (70, 453), (71, 453), (71, 454), (72, 454), (73, 454), (73, 455), (73, 456), (74, 456), (75, 456), (75, 457), (76, 457), (76, 458), (77, 458), (77, 459), (78, 459), (79, 459), (79, 460), (80, 460), (80, 461), (81, 461), (81, 462), (82, 462), (83, 462), (83, 463), (84, 463), (84, 464), (84, 465), (85, 465), (85, 466), (85, 467), (85, 468), (86, 468), (86, 467), (86, 466), (86, 465), (87, 465), (88, 465), (89, 465), (90, 465), (91, 465), (92, 465), (93, 465), (94, 465), (94, 466), (94, 467), (94, 468), (93, 468), (93, 469), (92, 469), (92, 470), (92, 471), (92, 472), (93, 472), (93, 471), (94, 471), (95, 471), (96, 471), (96, 470), (97, 470), (98, 470), (98, 469), (99, 469), (100, 469), (101, 469), (102, 469), (103, 469), (104, 469), (104, 470), (105, 470), (105, 471), (105, 472), (106, 472), (106, 473), (106, 474), (106, 475), (106, 476), (106, 477), (106, 478), (106, 479), (107, 479), (108, 479), (109, 479), (109, 480), (109, 481), (110, 481), (110, 482), (110, 483), (110, 484), (110, 485), (110, 486), (109, 486), (109, 487), (109, 488), (109, 489), (110, 489), (110, 490), (110, 491), (111, 491), (112, 491), (112, 492), (113, 492), (114, 492), (115, 492), (116, 492), (117, 492), (118, 492), (118, 493), (119, 493), (120, 493), (121, 493), (122, 493), (123, 493), (123, 494), (123, 495), (123, 496), (124, 496), (125, 496), (126, 496), (127, 496), (128, 496), (128, 495), (129, 495), (130, 495), (130, 496), (130, 497), (130, 498), (131, 498), (132, 498), (133, 498), (134, 498), (134, 499), (135, 499), (135, 500), (136, 500), (137, 500), (137, 501), (137, 502), (138, 502), (139, 502), (140, 502), (141, 502), (141, 501), (142, 501), (143, 501), (143, 502), (143, 503), (144, 503), (145, 503), (146, 503), (147, 503), (147, 502), (148, 502), (148, 503), (149, 503), (149, 502), (149, 501), (150, 501), (151, 501), (152, 501), (153, 501), (154, 501), (154, 500), (155, 500), (155, 499), (156, 499), (156, 500), (157, 500), (157, 499), (158, 499), (159, 499), (159, 500), (160, 500), (161, 500), (161, 501), (162, 501), (163, 501), (164, 501), (165, 501), (165, 500), (165, 499), (165, 498), (164, 498), (163, 498), (162, 498), (162, 497), (162, 496), (163, 496), (163, 495), (164, 495), (165, 495), (166, 495), (166, 496), (167, 496), (168, 496), (169, 496), (169, 497), (170, 497), (170, 496), (170, 495), (170, 494), (170, 493), (170, 492), (171, 492), (172, 492), (173, 492), (174, 492), (175, 492), (176, 492), (176, 493), (177, 493), (178, 493), (178, 494), (179, 494), (179, 493), (180, 493), (181, 493), (182, 493), (183, 493), (184, 493), (184, 492), (185, 492), (186, 492), (187, 492), (188, 492), (188, 493), (189, 493), (189, 492), (190, 492), (191, 492), (192, 492), (193, 492), (194, 492), (195, 492), (195, 493), (196, 493), (197, 493), (198, 493), (199, 493), (200, 493), (201, 493), (202, 493), (202, 492), (203, 492), (204, 492), (204, 491), (205, 491), (206, 491), (206, 490), (207, 490), (208, 490), (209, 490), (209, 489), (210, 489), (210, 488), (211, 488), (211, 487), (211, 486), (211, 485), (212, 485), (213, 485), (213, 484), (212, 484), (212, 483), (213, 483), (213, 482), (214, 482), (214, 481), (214, 480), (214, 479), (214, 478), (215, 478), (216, 478), (217, 478), (217, 477), (216, 477), (215, 477), (214, 477), (213, 477), (212, 477), (211, 477), (211, 478), (211, 479), (211, 480), (210, 480), (209, 480), (208, 480), (207, 480), (206, 480), (205, 480), (204, 480), (203, 480), (203, 479), (202, 479), (201, 479), (201, 480), (201, 481), (201, 482), (201, 483), (200, 483), (199, 483), (198, 483), (198, 482), (197, 482), (197, 481), (198, 481), (198, 480), (199, 480), (199, 479), (199, 478), (200, 478), (201, 478), (202, 478), (202, 477), (201, 477), (200, 477), (199, 477), (198, 477), (197, 477), (196, 477), (195, 477), (194, 477), (193, 477), (192, 477), (191, 477), (191, 476), (191, 475), (190, 475), (189, 475), (189, 474), (188, 474), (187, 474), (186, 474), (185, 474), (184, 474), (184, 473), (184, 472), (184, 471), (184, 470), (185, 470), (185, 469), (186, 469), (186, 470), (187, 470), (187, 471), (188, 471), (189, 471), (189, 472), (190, 472), (191, 472), (192, 472), (193, 472), (194, 472), (194, 471), (194, 470), (194, 469), (194, 468), (194, 467), (195, 467), (195, 466), (196, 466), (196, 467), (197, 467), (198, 467), (199, 467), (200, 467), (201, 467), (201, 468), (202, 468), (202, 467), (202, 466), (203, 466), (204, 466), (204, 465), (204, 464), (205, 464), (205, 463), (206, 463), (207, 463), (208, 463), (209, 463), (210, 463), (211, 463), (211, 462), (211, 461), (212, 461), (212, 460), (212, 459), (212, 458), (212, 457), (212, 456), (211, 456), (211, 455), (211, 454), (211, 453), (212, 453), (212, 454), (213, 454), (213, 453), (213, 452), (214, 452), (215, 452), (215, 451), (216, 451), (216, 450), (217, 450), (217, 449), (218, 449), (219, 449), (220, 449), (221, 449), (221, 448), (221, 447), (221, 446), (221, 445), (222, 445), (222, 446), (222, 447), (223, 447), (224, 447), (225, 447), (225, 448), (226, 448), (227, 448), (227, 449), (228, 449), (228, 448), (228, 447), (229, 447), (229, 446), (229, 445), (230, 445), (230, 446), (231, 446), (231, 445), (232, 445), (232, 444), (231, 444), (230, 444), (230, 443), (230, 442), (230, 441), (231, 441), (232, 441), (233, 441), (233, 440), (234, 440), (235, 440), (235, 439), (236, 439), (237, 439), (237, 440), (238, 440), (239, 440), (240, 440), (240, 439), (241, 439), (242, 439), (243, 439), (244, 439), (244, 440), (244, 441), (244, 442), (245, 442), (245, 441), (245, 440), (246, 440), (247, 440), (247, 441), (248, 441), (248, 442), (249, 442), (250, 442), (251, 442), (251, 441), (252, 441), (253, 441), (253, 440), (254, 440), (255, 440), (255, 441), (256, 441), (257, 441), (258, 441), (259, 441), (260, 441), (261, 441), (262, 441), (262, 442), (262, 443), (263, 443), (263, 442), (263, 441), (263, 440), (264, 440), (265, 440), (265, 441), (266, 441), (267, 441), (268, 441), (269, 441), (270, 441), (271, 441), (271, 440), (271, 439), (271, 438), (271, 437), (272, 437), (272, 438), (273, 438), (274, 438), (275, 438), (275, 437), (276, 437), (277, 437), (277, 436), (277, 435), (278, 435), (279, 435), (280, 435), (281, 435), (282, 435), (283, 435), (284, 435), (284, 434), (284, 433), (285, 433), (285, 432), (285, 431), (286, 431), (286, 432), (287, 432), (287, 431), (288, 431), (289, 431), (289, 432), (290, 432), (291, 432), (291, 433), (291, 434), (291, 435), (292, 435), (293, 435), (293, 436), (294, 436), (295, 436), (296, 436), (296, 437), (297, 437), (298, 437), (299, 437), (300, 437), (301, 437), (301, 436), (301, 435), (300, 435), (300, 434), (299, 434), (298, 434), (297, 434), (297, 433), (298, 433), (298, 432), (299, 432), (300, 432), (301, 432), (302, 432), (303, 432), (304, 432), (305, 432), (306, 432), (306, 431), (306, 430), (307, 430), (308, 430), (309, 430), (309, 429), (310, 429), (310, 428), (310, 427), (309, 427), (309, 426), (308, 426), (308, 425), (307, 425), (307, 424), (307, 423), (306, 423), (305, 423), (304, 423), (303, 423), (303, 422), (302, 422), (301, 422), (300, 422), (299, 422), (298, 422), (297, 422), (296, 422), (295, 422), (295, 421), (294, 421), (293, 421), (293, 420), (292, 420), (292, 419), (291, 419), (290, 419), (290, 418), (290, 417), (290, 416), (291, 416), (291, 415), (292, 415), (292, 414), (292, 413), (292, 412), (292, 411), (293, 411), (294, 411), (294, 410), (294, 409), (295, 409), (295, 408), (295, 407), (296, 407), (296, 408), (296, 409), (297, 409), (297, 410), (298, 410), (298, 411), (298, 412), (299, 412), (300, 412), (301, 412), (302, 412), (303, 412), (304, 412), (304, 411), (305, 411), (306, 411), (307, 411), (308, 411), (309, 411), (310, 411), (311, 411), (311, 412), (312, 412), (313, 412), (313, 413), (313, 414), (313, 415), (314, 415), (315, 415), (315, 416), (315, 417), (315, 418), (316, 418), (317, 418), (318, 418), (318, 419), (319, 419), (319, 418), (320, 418), (321, 418), (322, 418), (323, 418), (324, 418), (325, 418), (326, 418), (326, 419), (327, 419), (327, 418), (328, 418), (328, 419), (329, 419), (329, 418), (330, 418), (331, 418), (332, 418), (333, 418), (333, 419), (334, 419), (335, 419), (335, 420), (336, 420), (336, 421), (337, 421), (337, 422), (338, 422), (339, 422), (340, 422), (341, 422), (342, 422), (342, 423), (343, 423), (344, 423), (345, 423), (345, 424), (345, 425), (346, 425), (346, 424), (346, 423), (347, 423), (348, 423), (348, 422), (349, 422), (350, 422), (351, 422), (352, 422), (352, 421), (352, 420), (352, 419), (352, 418), (351, 418), (351, 417), (351, 416), (352, 416), (352, 415), (351, 415), (350, 415), (349, 415), (348, 415), (348, 414), (347, 414), (346, 414), (346, 415), (346, 416), (345, 416), (344, 416), (344, 415), (344, 414), (343, 414), (342, 414), (342, 413), (342, 412), (341, 412), (341, 411), (340, 411), (339, 411), (339, 410), (338, 410), (338, 409), (338, 408), (338, 407), (337, 407), (336, 407), (336, 408), (335, 408), (334, 408), (334, 409), (333, 409), (332, 409), (331, 409), (330, 409), (330, 408), (330, 407), (331, 407), (331, 406), (331, 405), (330, 405), (330, 404), (330, 403), (330, 402), (329, 402), (329, 401), (328, 401), (327, 401), (327, 400), (326, 400), (326, 399), (325, 399), (324, 399), (323, 399), (323, 398), (324, 398), (324, 397), (325, 397), (326, 397), (326, 396), (325, 396), (324, 396), (323, 396), (323, 395), (323, 394), (324, 394), (324, 393), (325, 393), (326, 393), (326, 392), (327, 392), (328, 392), (328, 391), (327, 391), (327, 390), (327, 389), (327, 388), (327, 387), (327, 386), (328, 386), (329, 386), (329, 387), (329, 388), (330, 388), (330, 389), (331, 389), (331, 388), (332, 388), (333, 388), (333, 389), (333, 390), (333, 391), (334, 391), (335, 391), (335, 392), (336, 392), (336, 393), (337, 393), (338, 393), (339, 393), (340, 393), (341, 393), (342, 393), (343, 393), (344, 393), (344, 392), (343, 392), (342, 392), (342, 391), (342, 390), (342, 389), (342, 388), (342, 387), (343, 387), (343, 386), (344, 386), (344, 387), (345, 387), (346, 387), (346, 388), (347, 388), (347, 387), (347, 386), (348, 386), (349, 386), (349, 385), (348, 385), (347, 385), (346, 385), (345, 385), (344, 385), (344, 384), (344, 383), (343, 383), (342, 383), (342, 382), (341, 382), (341, 381), (340, 381), (339, 381), (338, 381), (337, 381), (336, 381), (335, 381), (334, 381), (333, 381), (332, 381), (331, 381), (330, 381), (329, 381), (329, 380), (329, 379), (330, 379), (331, 379), (332, 379), (333, 379), (333, 378), (332, 378), (332, 377), (333, 377), (334, 377), (335, 377), (335, 376), (335, 375), (335, 374), (335, 373), (336, 373), (337, 373), (337, 372), (337, 371), (337, 370), (337, 369), (338, 369), (339, 369), (339, 368), (339, 367), (340, 367), (340, 366), (340, 365), (340, 364), (341, 364), (342, 364), (342, 363), (342, 362), (341, 362), (341, 361), (341, 360), (341, 359), (340, 359), (339, 359), (338, 359), (338, 358), (337, 358), (337, 357), (338, 357), (338, 356), (338, 355), (338, 354), (339, 354), (340, 354), (340, 355), (341, 355), (341, 356), (342, 356), (343, 356), (344, 356), (344, 357), (344, 358), (345, 358), (345, 359), (345, 360), (346, 360), (347, 360), (347, 361), (348, 361), (349, 361), (350, 361), (350, 362), (351, 362), (352, 362), (353, 362), (354, 362), (355, 362), (356, 362), (357, 362), (357, 363), (358, 363), (358, 364), (359, 364), (360, 364), (361, 364), (362, 364), (362, 365), (362, 366), (362, 367), (362, 368), (362, 369), (362, 370), (363, 370), (363, 371), (364, 371), (364, 372), (364, 373), (365, 373), (365, 374), (365, 375), (366, 375), (366, 374), (367, 374), (368, 374), (368, 375), (368, 376), (367, 376), (367, 377), (367, 378), (367, 379), (367, 380), (367, 381), (367, 382), (367, 383), (368, 383), (368, 384), (368, 385), (368, 386), (369, 386), (370, 386), (371, 386), (371, 385), (372, 385), (373, 385), (373, 386), (374, 386), (375, 386), (376, 386), (377, 386), (378, 386), (379, 386), (380, 386), (381, 386), (381, 387), (381, 388), (382, 388), (382, 389), (382, 390), (382, 391), (383, 391), (384, 391), (385, 391), (386, 391), (387, 391), (388, 391), (389, 391), (390, 391), (390, 392), (391, 392), (392, 392), (392, 393), (393, 393), (394, 393), (395, 393), (396, 393), (397, 393), (397, 394), (398, 394), (398, 393), (399, 393), (400, 393), (401, 393), (402, 393), (403, 393), (404, 393), (405, 393), (405, 394), (406, 394), (406, 393), (407, 393), (407, 394), (408, 394), (409, 394), (410, 394), (410, 395), (411, 395), (411, 396), (412, 396), (413, 396), (413, 397), (414, 397), (415, 397), (416, 397), (416, 398), (416, 399), (417, 399), (417, 400), (418, 400), (419, 400), (419, 401), (420, 401), (420, 402), (420, 403), (419, 403), (419, 404), (418, 404), (417, 404), (417, 405), (417, 406), (418, 406), (419, 406), (420, 406), (420, 407), (421, 407), (422, 407), (422, 406), (423, 406), (424, 406), (424, 405), (425, 405), (426, 405), (426, 406), (426, 407), (426, 408), (427, 408), (428, 408), (429, 408), (430, 408), (431, 408), (432, 408), (432, 409), (432, 410), (432, 411), (432, 412), (433, 412), (433, 413), (433, 414), (433, 415), (433, 416), (433, 417), (433, 418), (433, 419), (432, 419), (431, 419), (431, 420), (431, 421), (432, 421), (432, 422), (432, 423), (432, 424), (432, 425), (432, 426), (433, 426), (434, 426), (435, 426), (436, 426), (437, 426), (437, 427), (438, 427), (439, 427), (439, 428), (439, 429), (439, 430), (439, 431), (438, 431), (438, 432), (438, 433), (438, 434), (439, 434), (439, 435), (439, 436), (439, 437), (439, 438), (439, 439), (439, 440), (439, 441), (439, 442), (439, 443), (439, 444), (439, 445), (439, 446), (440, 446), (440, 447), (440, 448), (440, 449), (441, 449), (442, 449), (442, 450), (443, 450), (443, 451), (443, 452), (443, 453), (442, 453), (442, 454), (441, 454), (440, 454), (439, 454), (438, 454), (437, 454), (436, 454), (436, 455), (437, 455), (438, 455), (439, 455), (439, 456), (439, 457), (439, 458), (439, 459), (439, 460), (439, 461), (440, 461), (441, 461), (442, 461), (442, 462), (442, 463), (442, 464), (442, 465), (442, 466), (443, 466), (444, 466), (445, 466), (446, 466), (446, 467), (446, 468), (446, 469), (446, 470), (446, 471), (446, 472), (446, 473), (446, 474), (446, 475), (446, 476), (446, 477), (446, 478), (446, 479), (446, 480), (446, 481), (446, 482), (446, 483), (446, 484), (445, 484), (445, 485), (445, 486), (445, 487), (445, 488), (446, 488), (446, 489), (446, 490), (446, 491), (447, 491), (448, 491), (449, 491), (449, 492), (449, 493), (450, 493), (450, 492), (451, 492), (451, 493), (451, 494), (451, 495), (452, 495), (452, 494), (452, 493), (452, 492), (453, 492), (454, 492), (454, 491), (454, 490), (453, 490), (453, 489), (454, 489), (454, 488), (455, 488), (455, 487), (456, 487), (456, 486), (455, 486), (455, 485), (455, 484), (456, 484), (456, 483), (456, 482), (455, 482), (454, 482), (453, 482), (453, 481), (453, 480), (453, 479), (453, 478), (453, 477), (454, 477), (455, 477), (455, 476), (456, 476), (456, 477), (457, 477), (458, 477), (458, 476), (458, 475), (459, 475), (460, 475), (461, 475), (462, 475), (463, 475), (464, 475), (465, 475), (465, 474), (465, 473), (466, 473), (467, 473), (468, 473), (469, 473), (469, 474), (470, 474), (470, 475), (471, 475), (472, 475), (472, 476), (472, 477), (472, 478), (472, 479), (472, 480), (472, 481), (472, 482), (472, 483), (472, 484), (472, 485), (472, 486), (472, 487), (472, 488), (472, 489), (473, 489), (473, 490), (474, 490), (475, 490), (476, 490), (476, 491), (477, 491), (478, 491), (478, 492), (478, 493), (478, 494), (479, 494), (480, 494), (481, 494), (482, 494), (482, 495), (483, 495), (483, 496), (484, 496), (485, 496), (485, 497), (486, 497), (487, 497), (488, 497), (488, 498), (488, 499), (488, 500), (488, 501), (489, 501), (489, 500), (490, 500), (490, 501), (490, 502), (491, 502), (491, 503), (491, 504), (491, 505), (491, 506), (492, 506), (493, 506), (494, 506), (495, 506), (496, 506), (497, 506), (497, 507), (498, 507), (499, 507), (500, 507), (500, 506), (500, 505), (501, 505), (502, 505), (502, 504), (502, 503), (503, 503), (503, 502), (502, 502), (501, 502), (501, 501), (501, 500), (500, 500), (500, 499), (500, 498), (501, 498), (502, 498), (502, 497), (502, 496), (502, 495), (503, 495), (503, 496), (504, 496), (504, 497), (504, 498), (504, 499), (505, 499), (506, 499), (506, 500), (506, 501), (507, 501), (508, 501), (509, 501), (510, 501), (510, 502), (511, 502), (512, 502), (513, 502), (514, 502), (514, 503), (515, 503), (515, 504), (515, 505), (516, 505), (516, 504), (517, 504), (518, 504), (519, 504), (520, 504), (520, 505), (521, 505), (521, 506), (522, 506), (523, 506), (524, 506), (525, 506), (526, 506), (526, 505), (527, 505), (527, 504), (528, 504), (528, 503), (527, 503), (527, 502), (528, 502), (528, 501), (529, 501), (530, 501), (531, 501), (532, 501), (532, 500), (532, 499), (533, 499), (534, 499), (535, 499), (535, 498), (536, 498), (536, 499), (537, 499), (537, 500), (536, 500), (536, 501), (536, 502), (536, 503), (536, 504), (536, 505), (536, 506), (537, 506), (538, 506), (538, 507), (538, 508), (538, 509), (539, 509), (540, 509), (540, 510), (540, 511), (539, 511), (539, 512), (539, 513), (539, 514), (539, 515), (539, 516), (539, 517), (539, 518), (540, 518), (541, 518), (541, 519), (542, 519), (543, 519), (544, 519), (545, 519), (546, 519), (547, 519), (548, 519), (549, 519), (549, 520), (549, 521), (549, 522), (549, 523), (549, 524), (548, 524), (547, 524), (546, 524), (546, 525), (546, 526), (546, 527), (546, 528), (546, 529), (546, 530), (547, 530), (548, 530), (548, 531), (548, 532), (548, 533), (547, 533), (547, 534), (546, 534), (545, 534), (545, 535), (545, 536), (545, 537), (545, 538), (545, 539), (545, 540), (545, 541), (546, 541), (546, 540), (547, 540), (548, 540), (548, 541), (549, 541), (549, 542), (549, 543), (549, 544), (550, 544), (550, 545), (551, 545), (552, 545), (553, 545), (554, 545), (555, 545), (555, 546), (555, 547), (555, 548), (555, 549), (554, 549), (554, 550), (554, 551), (554, 552), (555, 552), (555, 553), (555, 554), (555, 555)]

def follow_waypoints(robot_id, waypoints, step_size=0.05, threshold=0.1):
    """
    Function to make the robot follow the waypoints.
    
    Args:
        robot_id: PyBullet ID of the robot.
        waypoints: List of waypoints [x, y, z].
        step_size: Incremental step size for movement.
        threshold: Distance threshold to consider a waypoint reached.
    """
    for waypoint in waypoints:
        while True:
            # Get current position
            pos, _ = p.getBasePositionAndOrientation(robot_id)
            current_x, current_y, current_z = pos
            
            # Calculate direction vector to the waypoint
            direction = [waypoint[0] - current_x, waypoint[1] - current_y, waypoint[2] - current_z]
            distance = np.linalg.norm(direction)
            
            # Check if waypoint is reached
            if distance < threshold:
                print(f"Waypoint {waypoint} reached.")
                break
            
            # Normalize direction vector
            direction = [d / distance for d in direction]
            
            # Compute new position incrementally
            new_x = current_x + direction[0] * step_size
            new_y = current_y + direction[1] * step_size
            
            # Adjust z based on heightfield
            z_offset = 0.2  # Safe height above the surface
            # height_z = p.getHeightfieldHeight([new_x, new_y])
            new_z = 0 + z_offset
            
            # Set the robot's new position
            p.resetBasePositionAndOrientation(robot_id, [new_x, new_y, new_z], p.getQuaternionFromEuler([0, 0, 0]))
            
            # Step the simulation
            p.stepSimulation()
            time.sleep(0.5)  # Add delay for simulation time

def overlay_path(path, base_offset=0.2):
    for i in range(len(path) - 1):
        # Start and end points
        start = np.array([path[i][0], path[i][1], 0]) / 100
        end = np.array([path[i + 1][0], path[i + 1][1], 0]) / 100
        
        # Use rayTest to find the height of the terrain at the start and end points
        ray_start_height = p.rayTest(start.tolist() + [10], start.tolist() + [-10])[0][3][2]
        ray_end_height = p.rayTest(end.tolist() + [10], end.tolist() + [-10])[0][3][2]
        
        # Set the height slightly above the terrain
        start[2] = ray_start_height + base_offset
        end[2] = ray_end_height + base_offset
        
        # Compute the midpoint
        midpoint = (start + end) / 2
        
        # Compute the direction and length of the segment
        direction = end - start
        length = np.linalg.norm(direction)
        direction /= length  # Normalize the direction vector
        
        # Create rotation to align cylinder with the segment
        axis = np.cross([0, 0, 1], direction)
        if np.linalg.norm(axis) < 1e-6:
            # Parallel to z-axis, no rotation needed
            quaternion = [0, 0, 0, 1]
        else:
            axis /= np.linalg.norm(axis)
            angle = np.arccos(np.dot([0, 0, 1], direction))
            quaternion = p.getQuaternionFromAxisAngle(axis, angle)
        
        # Create the visual shape for the cylinder
        cylinder_visual = p.createVisualShape(
            shapeType=p.GEOM_CYLINDER,
            radius=0.01,
            length=length,
            rgbaColor=[1, 0, 0, 1]  # Red color
        )
        
        # Add the cylinder as a multibody at the computed position
        p.createMultiBody(
            baseMass=0,  # Static cylinder
            baseCollisionShapeIndex=-1,  # No collision
            baseVisualShapeIndex=cylinder_visual,
            basePosition=midpoint.tolist(),
            baseOrientation=quaternion
        )


def three_d_viz():
    global path
    p.connect(p.GUI)
    p.setAdditionalSearchPath(pybullet_data.getDataPath())
    p.resetSimulation()
    p.setGravity(0, 0, -9.81)
    
    
    #+-+-+-+-+-+-+-+-+-+-+-+- Open the dtm as a raster image +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
    DATASETS_PATH = "datasets"
    
    dtm_path_tiff = f"{DATASETS_PATH}/HiRISE/hello.tiff"
    # dtm_path_tiff = f"{DATASETS_PATH}/HiRISE/utopia_planitia.tiff"
    

    dtm_image = gdal.Open(dtm_path_tiff)
    
    band1 = dtm_image.GetRasterBand(1) # Red channel 
    band2 = dtm_image.GetRasterBand(1) # Green channel 
    band3 = dtm_image.GetRasterBand(1) # Blue channel
    
    b1 = band1.ReadAsArray() 
    b2 = band2.ReadAsArray() 
    b3 = band3.ReadAsArray() 
    
    dtm_image_array = np.array(dtm_image)
    
    print(np.max(dtm_image_array))


    img = np.dstack((b1, b2, b3)) 

    min_val = -3961.39
    max_val = -3927.94
    # min_val = -3716.16
    # max_val = -3659.73
    
    img_clipped = np.clip(img, min_val, max_val)
    
    img_normalized = ((img_clipped - min_val) / (max_val - min_val) * 255).astype(np.uint8)
    
    x_start, y_start = 2200, 3600
    x_end, y_end = 2800, 4200
    # x_start, y_start = 1000, 1000
    # x_end, y_end = 1500, 1500
    
    print(img_normalized.shape)
    
    img_cropped = img_normalized[y_start:y_end, x_start:x_end]
    
    # print(img_cropped[200][300])
    
    plt.imshow(img_cropped)
    # plt.savefig('Cropped_Tiff.png')
    plt.show()
    
    img_cropped = img_cropped[:, :, :1]
    
    heightmap_data = (img_cropped / img_cropped.max()).flatten()
    
    
    heightmap_data = heightmap_data[:heightmap_data.shape[0]]
    
    print(heightmap_data.shape)
    
    dtm_size = img_cropped.shape[0]
    # heightmap_data = np.zeros(dtm_size * dtm_size)
    
    terrain_shape = p.createCollisionShape(
        shapeType=p.GEOM_HEIGHTFIELD,
        meshScale=[0.01, 0.01, 1],  # Scale x, y, z
        # meshScale=[1, 1, 100],  # Scale x, y, z
        heightfieldTextureScaling=(dtm_size - 1) / 2,
        heightfieldData=heightmap_data,
        numHeightfieldRows=dtm_size,
        numHeightfieldColumns=dtm_size
    )
    print("Here 1")
    
    terrain_id = p.createMultiBody(0, terrain_shape, basePosition=[3, 3, 0.1], baseOrientation=[0, 0, -0.707, 0.707])
    print("Here 2")
    
    robot_start_pos = [0.1, 0.1, 0.2]
    print("Here 3")
    robot_start_orientation = p.getQuaternionFromEuler([0, 0, 0])  # Initial facing direction
    print("Here 4")
    robot_id = p.loadURDF("r2d2.urdf", robot_start_pos, robot_start_orientation, globalScaling=0.1)
    print("Here 5")
    print("Loaded urdf")

    overlay_path(path)

    waypoints = list()

    for path_point in path:
        waypoints.append([path_point[0] / 100, path_point[1] / 100, 0.2])
        
    follow_waypoints(robot_id, waypoints)
    
    

if __name__ == "__main__":
    three_d_viz()
    
    